{"version":3,"sources":["components/reusables/Header.js","components/Landing/Landing.js","actions/plantActions.js","actions/types.js","components/Table/Table.js","components/Chart/Chart.js","reducers/plantReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["Header","className","style","fontFamily","to","Landing","nextProps","newPlant","this","props","plants","unshift","plantItems","map","plant","background","picture","WebkitBackgroundSize","MozBackgroundSize","OBackgroundSize","backgroundSize","key","id","name","plantDate","growTime","idealWater","idealSun","Component","connect","state","fetchPlants","dispatch","console","log","fetch","then","res","json","type","payload","Table","Chart","barChart","data","labels","datasets","label","backgroundColor","options","title","display","text","fontSize","scales","yAxes","ticks","beginAtZero","responsive","legend","position","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","Fragment","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.154a65dc.chunk.js","sourcesContent":["import React from 'react'\r\nimport './headerstyle.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n    return(\r\n        <nav className=\"nav header-custom\">\r\n            <div className=\"header-brand\">\r\n                <span style={{fontFamily: \"'Lexend Zetta', sans-serif\"}}>data</span><span style={{fontFamily: \"'Bebas Neue', cursive\"}}> Garden</span>\r\n            </div>\r\n            <Link to=\"/\" className=\"link-box\">\r\n            <button className=\"header-button\">Home</button>\r\n            </Link>\r\n            <Link to=\"/table\" className=\"link-box\">\r\n            <button className=\"header-button\">Table</button>\r\n            </Link>\r\n            <Link to=\"/chart\" className=\"link-box\">\r\n            <button className=\"header-button\">Chart</button>\r\n            </Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPlants } from '../../actions/plantActions';\r\nimport Header from '../reusables/Header';\r\nimport './landingstyle.css';\r\n\r\nclass Landing extends Component {\r\n\r\n    // componentDidMount() {\r\n    //     this.props.fetchPlants();\r\n    // }\r\n\r\n    componentDidUpdate(nextProps) {\r\n        if(nextProps.newPlant) {\r\n            this.props.plants.unshift(nextProps.newPlant);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const plantItems = this.props.plants.map(plant => (\r\n            <div className=\"plant-flex-container\">\r\n                <div className=\"image-container\" style={{background: `linear-gradient(\r\n                        rgba(0, 0, 0, 0.0),\r\n                        rgba(0, 0, 0, 0.0)\r\n                    ), url(${plant.picture}) center`,\r\n                    WebkitBackgroundSize: \"cover\",\r\n                    MozBackgroundSize: \"cover\",\r\n                    OBackgroundSize: \"cover\",\r\n                    backgroundSize: \"cover\"\r\n                    }}>\r\n                </div>\r\n                <div key={plant.id} className=\"plant-container\">\r\n                    <h3>{plant.name}</h3>\r\n                    <p>You planted this on {plant.plantDate}</p>\r\n                    <p>This plant takes {plant.growTime} days to grow, on average</p>\r\n                    <p>Ideal water per week: {plant.idealWater} inches</p>\r\n                    <p>Ideal sun: {plant.idealSun}</p>\r\n                </div>\r\n            </div>\r\n        ))\r\n\r\n        return(\r\n            <>\r\n            <Header />\r\n            <h1>Landing</h1>\r\n\r\n            <div className=\"flex-container\">\r\n                {plantItems}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nLanding.propTypes = {\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n    newPlant: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.plants.plants,\r\n    newPlant: state.plants.plant\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPlants })(Landing);","import { FETCH_PLANTS, NEW_PLANT } from './types';\r\n\r\nexport const fetchPlants = () => dispatch => {\r\n    console.log(\"fetching...\");\r\n    fetch(null)\r\n        .then(res => res.json())\r\n        .then(plants => \r\n            dispatch({\r\n                type: FETCH_PLANTS,\r\n                payload: plants \r\n            })\r\n        );\r\n}\r\n\r\nexport const createPost = (plantData) => dispatch => {\r\n    console.log(\"adding...\");\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        headers: {\r\n            'content-type': 'application/json'\r\n        },\r\n        body: JSON.stringify(plantData)\r\n    })\r\n    .then(res => res.json())\r\n    .then(plant => dispatch({\r\n        type: NEW_PLANT,\r\n        payload: plant\r\n    }));\r\n};","export const FETCH_PLANTS = 'FETCH_PLANTS';\r\nexport const NEW_PLANT = 'NEW_PLANT';","import React, { Component } from \"react\";\r\nimport Header from '../reusables/Header';\r\n\r\nclass Table extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <Header />\r\n            <h1>Table</h1>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Table;","import React, { Component } from \"react\";\r\nimport Header from '../reusables/Header';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport './chartstyle.css';\r\n\r\nclass Chart extends Component {\r\n\r\n    render() {\r\n\r\n        const barChart = \r\n                <Bar\r\n                    type = 'horizontalBar'\r\n                    data = {{\r\n                        labels: ['Corn', 'Tomatoes', 'Cucumbers', 'Spinach'],\r\n                        datasets: [{\r\n                            label: 'Days',\r\n                            backgroundColor: 'lightblue',\r\n                            data: [80, 60, 60, 30, 50]\r\n                        }]\r\n    \r\n                    }}\r\n                    options={{\r\n                        title:{\r\n                          display:true,\r\n                          text:'Days from planting to harvest',\r\n                          fontSize: 20\r\n                        },\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        },\r\n                        responsive: true,\r\n                        legend:{\r\n                          display:true,\r\n                          position:'right'\r\n                        }\r\n                    }}\r\n                />;\r\n\r\n        return(\r\n            <>\r\n            <Header />\r\n            <div>\r\n                <h1>Chart</h1>\r\n                <div className=\"chart-container\">\r\n                    {barChart}\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Chart;","import { FETCH_PLANTS, NEW_PLANT } from '../actions/types';\r\nimport initialStateJSON from '../initialState.json';\r\n\r\nconst initialState = {\r\n    plants: initialStateJSON,\r\n    plant: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_PLANTS:\r\n            console.log(\"reducer\");\r\n            return {\r\n                ...state,\r\n                plants: action.payload\r\n            }\r\n        case NEW_PLANT:\r\n            console.log(\"reducer\");\r\n            return {\r\n                ...state,\r\n                plant: action.payload\r\n            }\r\n        default:\r\n            return state; \r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport plantReducer from './plantReducer';\r\n\r\nexport default combineReducers({\r\n    plants: plantReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'; \r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    compose( \r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landing from './components/Landing/Landing';\nimport Table from './components/Table/Table';\nimport Chart from './components/Chart/Chart';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nfunction App() { \n  return (\n    <Router>\n      <React.Fragment>\n        <Provider store={store}>\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/table\" component={Table} />\n            <Route exact path=\"/chart\" component={Chart} />\n          </Switch>\n        </Provider>\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}