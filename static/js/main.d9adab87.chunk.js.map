{"version":3,"sources":["actions/plantActions.js","actions/types.js","components/reusables/EditPlantModal.js","components/Landing/Landing.js","components/Table/Table.js","components/Chart/Chart.js","components/reusables/NewPlantModal.js","components/reusables/Header.js","reducers/plantReducer.js","reducers/index.js","store.js","App.js","index.js","components/Chart/Chart.module.css"],"names":["fetchPlants","dispatch","type","EditPlantModal","props","onChange","event","setState","target","name","value","handleSubmit","preventDefault","editedPlant","id","state","plantDate","growTime","idealWater","idealSun","picture","console","log","editPlant","showHide","propIdRender","plantItem","plants","find","plant","this","className","style","backgroundColor","color","onClick","handleModalShowHide","Modal","show","Header","closeButton","Title","fontFamily","fontSize","Body","borderBottomLeftRadius","borderBottomRightRadius","placeholder","rows","height","margin","Component","connect","items","data","payload","Landing","plantItems","map","background","WebkitBackgroundSize","MozBackgroundSize","OBackgroundSize","backgroundSize","key","length","deletePlant","Table","scope","Chart","barChart","labels","datasets","label","barPercentage","borderColor","borderWidth","options","title","display","text","layout","padding","scales","xAxes","ticks","beginAtZero","responsive","maintainAspectRatio","legend","fullWidth","styles","top","container","NewPlantModal","newPlant","Date","now","getName","getPlantDate","getGrowTime","getWater","getSun","getPicture","createPlant","ref","input","saveStorage","JSONstate","JSON","stringify","localStorage","setItem","loadStorage","parse","getItem","loadPlants","to","initialState","combineReducers","action","concat","content","i","filter","item","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","Fragment","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d9adab87.chunk.js","sourcesContent":["import { FETCH_PLANTS, NEW_PLANT, EDIT_PLANT, DELETE_PLANT, LOAD_PLANTS } from './types';\r\n\r\nexport function fetchPlants() {  \r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: FETCH_PLANTS  \r\n        });  \r\n    }  \r\n}; \r\n\r\nexport function createPlant(data) {  \r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: NEW_PLANT,  \r\n            payload: data  \r\n        });  \r\n    }  \r\n};\r\n\r\nexport function editPlant(data) {  \r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: EDIT_PLANT,  \r\n            payload: data  \r\n        });  \r\n    }  \r\n};  \r\n  \r\nexport function deletePlant(id) {  \r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: DELETE_PLANT,  \r\n            payload: id\r\n        });  \r\n    }  \r\n};\r\n\r\nexport function loadPlants(data) {\r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: LOAD_PLANTS,  \r\n            payload: data\r\n        });  \r\n    }    \r\n};","export const FETCH_PLANTS = 'FETCH_PLANTS';\r\nexport const NEW_PLANT = 'NEW_PLANT';\r\nexport const DELETE_PLANT = 'DELETE_PLANT';\r\nexport const EDIT_PLANT = 'EDIT_PLANT';\r\nexport const LOAD_PLANTS = 'LOAD_PLANTS';","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { editPlant, fetchPlants } from '../../actions/plantActions';\r\nimport './modalstyle.css';\r\n\r\nclass EditPlantModal extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);      // see Landing.js comment, line 37\r\n\r\n        const propIdRender = this.props.id; \r\n        const plantItem = this.props.plants.find(plant => plant.id === propIdRender);\r\n\r\n        this.state = {\r\n            showHide : false,\r\n            name: plantItem.name,\r\n            plantDate: plantItem.plantDate,\r\n            growTime: plantItem.growTime,\r\n            idealWater: plantItem.idealWater,\r\n            idealSun: plantItem.idealSun,\r\n            picture: plantItem.picture\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    componentDidMount() {  \r\n        this.props.fetchPlants();  \r\n    }  \r\n\r\n    handleModalShowHide() {\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const propsId = this.props.id;\r\n        const editedPlant = {\r\n            id: propsId,\r\n            name: this.state.name,\r\n            plantDate: this.state.plantDate,\r\n            growTime: this.state.growTime,\r\n            idealWater: this.state.idealWater,\r\n            idealSun: this.state.idealSun,\r\n            picture: this.state.picture\r\n        };\r\n\r\n        console.log(`Editing existing plant: ${editedPlant.name}`);\r\n        this.props.editPlant(editedPlant);\r\n        \r\n        this.setState({ showHide: false });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <button className=\"btn list-button\" style={{backgroundColor: \"#463239\", color: \"white\"}} onClick={() => this.handleModalShowHide()}>\r\n                    Edit Plant\r\n                </button>\r\n\r\n                <Modal show={this.state.showHide}>\r\n                    <Modal.Header style={{backgroundColor: \"#7FB285\", color: \"white\"}} closeButton onClick={() => this.handleModalShowHide()}>\r\n                        <Modal.Title style={{fontFamily: \"'Roboto Slab', serif\", fontSize: \"30px\"}}>Edit Plant</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ backgroundColor: \"#FAB3A9\", borderBottomLeftRadius: \"5px\", borderBottomRightRadius: \"5px\"}}>\r\n                        <form>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Name: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.name}\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    placeholder=\"name\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Planting Date: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.plantDate}\r\n                                    type=\"text\"\r\n                                    name=\"plantDate\"\r\n                                    placeholder=\"Planting Date\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Days to Harvest: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.growTime}\r\n                                    type=\"text\"\r\n                                    name=\"growTime\"\r\n                                    placeholder=\"Days to Harvest\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Ideal Water (inches): </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.idealWater}\r\n                                    name=\"idealWater\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Water per week in inches\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Ideal Sun Exposure: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    onChange={this.onChange}\r\n                                    value={this.state.idealSun}\r\n                                    type=\"text\"\r\n                                    name=\"idealSun\"\r\n                                    placeholder=\"Ideal sun exposure\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Picture Link: </label><br/>\r\n                                <textarea\r\n                                    rows=\"3\"\r\n                                    style={{height: \"65px\"}}\r\n                                    onChange={this.onChange}\r\n                                    className=\"input\"\r\n                                    value={this.state.picture}\r\n                                    name=\"picture\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Full link\"\r\n                                />\r\n                            </div>\r\n                        </form>\r\n\r\n                        <button className=\"btn btn-light header-button\" style={{margin: \"0 auto\"}} onClick={this.handleSubmit}>\r\n                            Submit\r\n                        </button>\r\n\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditPlantModal.propTypes = {\r\n    editPlant: PropTypes.func.isRequired,\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.items.plants,\r\n});\r\n\r\nexport default connect(mapStateToProps, { editPlant, fetchPlants })(EditPlantModal);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPlants, deletePlant } from '../../actions/plantActions';\r\nimport EditPlantModal from '../reusables/EditPlantModal';\r\nimport './landingstyle.css';\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount() {  \r\n        this.props.fetchPlants();  \r\n    }\r\n\r\n    render() {\r\n\r\n        const plantItems = this.props.plants.map(plant => (\r\n            <div className=\"plant-flex-container\">\r\n                <div className=\"image-container\" style={{background: `linear-gradient(\r\n                        rgba(0, 0, 0, 0.0),\r\n                        rgba(0, 0, 0, 0.0)\r\n                    ), url(${plant.picture}) center`,\r\n                    WebkitBackgroundSize: \"cover\",\r\n                    MozBackgroundSize: \"cover\",\r\n                    OBackgroundSize: \"cover\",\r\n                    backgroundSize: \"cover\"\r\n                    }}>\r\n                </div>\r\n                <div key={plant.id} className=\"plant-container\">\r\n                    {plant.name.length ? (<h3>{plant.name}</h3>) : (<h3>N/A</h3>)}\r\n                    {plant.plantDate.length ? (<p><span>You planted on:</span> {plant.plantDate}</p>) : (<p><span>You planted on:</span> N/A</p>)}\r\n                    {plant.growTime.length ? (<p><span>Days to Harvest:</span> {plant.growTime} days, on average</p>) : (<p><span>Days to Harvest:</span> N/A </p>)}\r\n                    {plant.idealWater.length ? (<p><span>Ideal water per week:</span> {plant.idealWater} inches</p>) : (<p><span>Ideal water per week:</span> N/A</p>)}\r\n                    {plant.idealSun.length ? (<p><span>Ideal sun:</span> {plant.idealSun} sun</p>) : (<p><span>Ideal sun:</span> N/A</p>)}\r\n                    <button className=\"list-button\" onClick={() => this.props.deletePlant(plant.id)}>Delete Plant</button>\r\n                    <EditPlantModal \r\n                        id={plant.id} // yes, this is a technically a prop-drill - I was drawing a blank on other ways to push the id to the respective component. Hopefully this doesn't violate the spirit of the project.\r\n                    />\r\n                </div>\r\n            </div>\r\n        ))\r\n\r\n        return(\r\n            <>\r\n            <h1 className=\"top-flex-container\">Welcome back! Here are the crops you've planted...</h1>\r\n\r\n            <div className=\"flex-container\">\r\n                {plantItems}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nLanding.propTypes = {\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    deletePlant: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.items.plants,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPlants, deletePlant })(Landing);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPlants } from '../../actions/plantActions';\r\nimport './tablestyle.css';\r\n\r\nclass Table extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <h1 className=\"top-flex-container\">Quick Reference Table</h1>\r\n            <div className=\"table-container\">\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Plant Date</th>\r\n                        <th scope=\"col\">Days to Harvest</th>\r\n                        <th scope=\"col\">Water/wk (inches)</th>\r\n                        <th scope=\"col\">Ideal sun</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.plants.map(plant => (\r\n                            <tr>\r\n                                {plant.name.length ? (<th scope=\"row\">{plant.name}</th>) : <th scope=\"row\">N/A</th>}\r\n                                    {plant.plantDate.length ? (<td>{plant.plantDate}</td>) : (<td>N/A</td>)}\r\n                                    {plant.growTime.length ? (<td>{plant.growTime}</td>) : (<td>N/A</td>)}\r\n                                    {plant.idealWater.length ? (<td>{plant.idealWater}</td>) : (<td>N/A</td>)}\r\n                                    {plant.idealSun.length ? (<td>{plant.idealSun}</td>) : (<td>N/A</td>)}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nTable.propTypes = {\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.items.plants,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPlants })(Table);","import React, { Component } from \"react\";\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPlants } from '../../actions/plantActions';\r\nimport styles from './Chart.module.css';\r\n\r\nclass Chart extends Component {\r\n\r\n    render() {\r\n\r\n        \r\n        const barChart = \r\n                <HorizontalBar\r\n                    data = {{\r\n                        labels: this.props.plants.map(function(plant) {\r\n                            if (plant.name.length) {\r\n                                return plant.name;\r\n                            } else {\r\n                                return \"N/A\"\r\n                            }\r\n                        }),\r\n                        datasets: [{\r\n                            label: 'Days',\r\n                            backgroundColor: '#FAB3A9',\r\n                            data: this.props.plants.map(plant => plant.growTime),\r\n                            barPercentage: 0.5,\r\n                            borderColor: '#ec6553',\r\n                            borderWidth: 2       \r\n                        }]\r\n    \r\n                    }}\r\n                    options={{\r\n                        title:{\r\n                          display:true,\r\n                          text:'Days from planting to harvest',\r\n                          fontSize: 20\r\n                        },\r\n                        layout: {\r\n                            padding: 20\r\n                        },\r\n                        scales: {\r\n                            xAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true,\r\n                                }\r\n                            }]\r\n                        },\r\n                        responsive: true,\r\n                        maintainAspectRatio: false,\r\n                        legend:{\r\n                          fullWidth: true\r\n                        },\r\n                        \r\n                    }}\r\n                />;\r\n\r\n        return(\r\n            <>\r\n            <h1 className={styles.top}>Growth Chart</h1>\r\n            <div>\r\n                <div className={styles.container}>\r\n                    {barChart}\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChart.propTypes = {\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.items.plants\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPlants })(Chart);","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createPlant } from '../../actions/plantActions';\r\nimport './modalstyle.css';\r\n\r\nclass NewPlantModal extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            showHide : false\r\n        }\r\n    }\r\n\r\n    handleModalShowHide() {\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newPlant = {\r\n            id: Date.now(),\r\n            name: this.getName.value,\r\n            plantDate: this.getPlantDate.value,\r\n            growTime: this.getGrowTime.value,\r\n            idealWater: this.getWater.value,\r\n            idealSun: this.getSun.value,\r\n            picture: this.getPicture.value\r\n        };\r\n\r\n        console.log(`Adding plant to state: ${newPlant.name}`);\r\n        this.props.createPlant(newPlant);\r\n        \r\n        this.setState({ showHide: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button className=\"btn header-button-add\" style={{backgroundColor: \"#463239\", color: \"white\"}} onClick={() => this.handleModalShowHide()}>\r\n                    Add Plant\r\n                </button>\r\n\r\n                <Modal show={this.state.showHide}>\r\n                    <Modal.Header style={{backgroundColor: \"#7FB285\", color: \"white\"}} closeButton onClick={() => this.handleModalShowHide()}>\r\n                        <Modal.Title style={{fontFamily: \"'Roboto Slab', serif\", fontSize: \"30px\"}}>Add Plant</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ backgroundColor: \"#FAB3A9\", borderBottomLeftRadius: \"5px\", borderBottomRightRadius: \"5px\"}}>\r\n                        <form>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Name: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getName = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Planting Date: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getPlantDate = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Planting Date\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Days to Harvest: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getGrowTime = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Days to Harvest\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Ideal Water: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getWater = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Ideal Water\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Ideal Sun: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getSun = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Ideal Sun\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Picture Link: </label><br/>\r\n                                <textarea\r\n                                    rows=\"3\"\r\n                                    style={{height: \"65px\"}}\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getPicture = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Full Link to Picture\"\r\n                                />\r\n                            </div>\r\n                        </form>\r\n\r\n                        <button className=\"btn btn-light header-button\" style={{margin: \"0 auto\"}} onClick={this.handleSubmit}>\r\n                            Submit\r\n                        </button>\r\n\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewPlantModal.propTypes = {\r\n    createPlant: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { createPlant })(NewPlantModal);","import React, { Component } from 'react'\r\nimport './headerstyle.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPlants, loadPlants } from '../../actions/plantActions';\r\nimport NewPlantModal from './NewPlantModal';\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount() {  \r\n        this.props.fetchPlants();  \r\n    }\r\n\r\n    saveStorage = () => {\r\n        const JSONstate = JSON.stringify(this.props.plants);\r\n        console.log(JSONstate);\r\n        localStorage.setItem(`state`, JSONstate);\r\n    }\r\n\r\n    loadStorage = () => {\r\n        const data = JSON.parse(localStorage.getItem(`state`));\r\n        console.log(data);\r\n        this.props.loadPlants(data);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"nav header-custom\">\r\n                <div className=\"header-brand\">\r\n                    <h1>datagarden</h1>\r\n                </div>\r\n                <div className=\"links\">\r\n                    <Link to=\"/\" className=\"link-box\">\r\n                    <   button className=\"header-button-link\">Home</button>\r\n                    </Link>\r\n                    <Link to=\"/table\" className=\"link-box\">\r\n                        <button className=\"header-button-link\">Table</button>\r\n                    </Link>\r\n                    <Link to=\"/chart\" className=\"link-box\">\r\n                    <button className=\"header-button-link\">Chart</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"storage\">\r\n                    <button className=\"header-button\" onClick={this.saveStorage}>Save Plants</button>\r\n                    <button className=\"header-button\" onClick={this.loadStorage}>Load Plants</button>\r\n                </div>\r\n                <NewPlantModal />\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes = {\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n    loadPlants: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.items.plants,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPlants, loadPlants })(Header);","import { FETCH_PLANTS, NEW_PLANT, EDIT_PLANT, DELETE_PLANT, LOAD_PLANTS } from '../actions/types';\r\nimport initialStateJSON from '../initialState.json';\r\n\r\nconst initialState = {\r\n    plants: initialStateJSON,\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_PLANTS:\r\n            console.log(\"reducer\");\r\n            return {\r\n                ...state\r\n            };\r\n        case NEW_PLANT:    \r\n            return {    \r\n                ...state,    \r\n                plants: state.plants.concat(action.payload)    \r\n            };   \r\n        case EDIT_PLANT:    \r\n            return {    \r\n                ...state,    \r\n                plants: state.plants.map(    \r\n                    (content, i) => content.id === action.payload.id ? {...content,\r\n                        id: action.payload.id, \r\n                        name: action.payload.name, \r\n                        plantDate : action.payload.plantDate, \r\n                        growTime: action.payload.growTime, \r\n                        idealWater: action.payload.idealWater, \r\n                        idealSun: action.payload.idealSun, \r\n                        picture: action.payload.picture } : content)    \r\n            };    \r\n        case DELETE_PLANT:    \r\n            return {    \r\n                ...state,    \r\n                plants: state.plants.filter(item => item.id !== action.payload)    \r\n            };\r\n        case LOAD_PLANTS:\r\n            return {\r\n                ...state,\r\n                plants: action.payload\r\n            }\r\n        default:\r\n            return state; \r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport plantReducer from './plantReducer';\r\n\r\nexport default combineReducers({\r\n    items: plantReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    compose( \r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landing from './components/Landing/Landing';\nimport Table from './components/Table/Table';\nimport Chart from './components/Chart/Chart';\nimport { Provider } from 'react-redux';\nimport Header from './components/reusables/Header';\n\nimport store from './store';\n\nfunction App() { \n  return (\n    <Router>\n      <React.Fragment>\n        <Provider store={store}>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/State-Management\" component={Landing} />\n            <Route exact path=\"/table\" component={Table} />\n            <Route exact path=\"/chart\" component={Chart} />\n          </Switch>\n        </Provider>\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1zXEl\",\"top\":\"Chart_top__2SMZR\"};"],"sourceRoot":""}