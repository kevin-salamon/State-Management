{"version":3,"sources":["actions/plantActions.js","actions/types.js","components/reusables/NewPlantModal.js","components/reusables/Header.js","components/Landing/Landing.js","components/Table/Table.js","components/Chart/Chart.js","reducers/plantReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["fetchPlants","dispatch","type","NewPlantModal","handleSubmit","event","preventDefault","newPlant","id","getId","value","name","getName","plantDate","getPlantDate","growTime","getGrowTime","idealWater","getWater","idealSun","getSun","picture","getPicture","console","log","props","createPlant","setState","showHide","state","this","className","style","backgroundColor","color","onClick","handleModalShowHide","Modal","show","Header","closeButton","Title","fontFamily","fontSize","Body","borderBottomLeftRadius","borderBottomRightRadius","ref","input","placeholder","rows","height","margin","Component","connect","data","payload","to","Landing","plantItems","plants","map","plant","background","WebkitBackgroundSize","MozBackgroundSize","OBackgroundSize","backgroundSize","key","deletePlant","Table","class","scope","Chart","barChart","labels","datasets","label","options","title","display","text","scales","yAxes","ticks","beginAtZero","responsive","legend","position","initialState","combineReducers","action","concat","content","i","employeeName","employeeDepartment","filter","item","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","Fragment","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b093278.chunk.js","sourcesContent":["import { FETCH_PLANTS, NEW_PLANT, EDIT_PLANT, DELETE_PLANT } from './types';\r\n\r\nexport function fetchPlants() {  \r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: FETCH_PLANTS  \r\n        });  \r\n    }  \r\n}; \r\n\r\nexport function createPlant(data) {  \r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: NEW_PLANT,  \r\n            payload: data  \r\n        });  \r\n    }  \r\n};\r\n\r\nexport function editPlant(data) {  \r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: EDIT_PLANT,  \r\n            payload: data  \r\n        });  \r\n    }  \r\n};  \r\n  \r\nexport function deletePlant(id) {  \r\n    return dispatch => {  \r\n        return dispatch({  \r\n            type: DELETE_PLANT,  \r\n            payload: id\r\n        });  \r\n    }  \r\n}; ","export const FETCH_PLANTS = 'FETCH_PLANTS';\r\nexport const NEW_PLANT = 'NEW_PLANT';\r\nexport const DELETE_PLANT = 'DELETE_PLANT';\r\nexport const EDIT_PLANT = 'EDIT_PLANT';","import React, { Component } from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createPlant } from '../../actions/plantActions';\r\nimport './modalstyle.css';\r\n\r\nclass NewPlantModal extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            showHide : false\r\n        }\r\n    }\r\n\r\n    handleModalShowHide() {\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const newPlant = {\r\n            id: this.getId.value,\r\n            name: this.getName.value,\r\n            plantDate: this.getPlantDate.value,\r\n            growTime: this.getGrowTime.value,\r\n            idealWater: this.getWater.value,\r\n            idealSun: this.getSun.value,\r\n            picture: this.getPicture.value\r\n        };\r\n\r\n        console.log(`Adding plant to state: ${newPlant.name}`);\r\n        this.props.createPlant(newPlant);\r\n        \r\n        this.setState({ showHide: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button className=\"btn header-button-add\" style={{backgroundColor: \"#463239\", color: \"white\"}} onClick={() => this.handleModalShowHide()}>\r\n                    Add Plant\r\n                </button>\r\n\r\n                <Modal show={this.state.showHide}>\r\n                    <Modal.Header style={{backgroundColor: \"#7FB285\", color: \"white\"}} closeButton onClick={() => this.handleModalShowHide()}>\r\n                        <Modal.Title style={{fontFamily: \"'Roboto Slab', serif\", fontSize: \"30px\"}}>Add Plant</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ backgroundColor: \"#FAB3A9\", borderBottomLeftRadius: \"5px\", borderBottomRightRadius: \"5px\"}}>\r\n                        <form>\r\n\r\n                            <div className=\"form-group text-center\">\r\n                                <label>ID: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getId = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"ID\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Name: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getName = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Planting Date: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getPlantDate = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Planting Date\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Days to Harvest: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getGrowTime = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Days to Harvest\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Ideal Water: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getWater = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Ideal Water\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Ideal Sun: </label><br/>\r\n                                <input\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getSun = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Ideal Sun\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group text-center\">\r\n                                <label>Picture Link: </label><br/>\r\n                                <textarea\r\n                                    rows=\"3\"\r\n                                    style={{height: \"65px\"}}\r\n                                    className=\"input\"\r\n                                    ref={(input)=>this.getPicture = input}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Full Link to Picture\"\r\n                                />\r\n                            </div>\r\n                        </form>\r\n\r\n                        <button className=\"btn btn-light header-button\" style={{margin: \"0 auto\"}} onClick={this.handleSubmit}>\r\n                            Submit\r\n                        </button>\r\n\r\n                    </Modal.Body>\r\n\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewPlantModal.propTypes = {\r\n    createPlant: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { createPlant })(NewPlantModal);","import React from 'react'\r\nimport './headerstyle.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport NewPlantModal from './NewPlantModal';\r\n\r\nfunction Header() {\r\n    return(\r\n        <nav className=\"nav header-custom\">\r\n            <div className=\"header-brand\">\r\n                <h1>datagarden</h1>\r\n            </div>\r\n            <div className=\"links\">\r\n                <Link to=\"/\" className=\"link-box\">\r\n                <button className=\"header-button\">Home</button>\r\n                </Link>\r\n                <Link to=\"/table\" className=\"link-box\">\r\n                <button className=\"header-button\">Table</button>\r\n                </Link>\r\n                <Link to=\"/chart\" className=\"link-box\">\r\n                <button className=\"header-button\">Chart</button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"storage\">\r\n                <button className=\"header-button\">Save Plants</button>\r\n                <button className=\"header-button\">Load Plants</button>\r\n            </div>\r\n            <NewPlantModal />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPlants, deletePlant } from '../../actions/plantActions';\r\nimport Header from '../reusables/Header';\r\nimport './landingstyle.css';\r\n\r\nclass Landing extends Component {\r\n\r\n    componentDidMount() {  \r\n        this.props.fetchPlants();  \r\n      }  \r\n\r\n    // componentDidUpdate(nextProps) {\r\n    //     if(nextProps.newPlant) {\r\n    //         this.props.plants.unshift(nextProps.newPlant);\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n\r\n        const plantItems = this.props.plants.map(plant => (\r\n            <div className=\"plant-flex-container\">\r\n                <div className=\"image-container\" style={{background: `linear-gradient(\r\n                        rgba(0, 0, 0, 0.0),\r\n                        rgba(0, 0, 0, 0.0)\r\n                    ), url(${plant.picture}) center`,\r\n                    WebkitBackgroundSize: \"cover\",\r\n                    MozBackgroundSize: \"cover\",\r\n                    OBackgroundSize: \"cover\",\r\n                    backgroundSize: \"cover\"\r\n                    }}>\r\n                </div>\r\n                <div key={plant.id} className=\"plant-container\">\r\n                    <h3>{plant.name}</h3>\r\n                    <p><span>You planted on:</span> {plant.plantDate}</p>\r\n                    <p><span>Days to Harvest:</span> {plant.growTime} days, on average</p>\r\n                    <p><span>Ideal water per week:</span> {plant.idealWater} inches</p>\r\n                    <p><span>Ideal sun:</span> {plant.idealSun} sun</p>\r\n                    <button onClick={() => this.props.deletePlant(plant.id)}>Delete Plant</button>\r\n                    <button>Edit Plant</button>\r\n                </div>\r\n            </div>\r\n        ))\r\n\r\n        return(\r\n            <>\r\n            <Header />\r\n            <h1 className=\"top-flex-container\">Welcome back! Here are the crops you've planted...</h1>\r\n\r\n            <div className=\"flex-container\">\r\n                {plantItems}\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nLanding.propTypes = {\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    deletePlant: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.plants.plants,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPlants, deletePlant })(Landing);","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPlants } from '../../actions/plantActions';\r\nimport Header from '../reusables/Header';\r\n\r\nclass Table extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <Header />\r\n            <table class=\"table\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Plant Date</th>\r\n                    <th scope=\"col\">Days to Maturation</th>\r\n                    <th scope=\"col\">Inches of Water per week</th>\r\n                    <th scope=\"col\">Ideal sun</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.plants.map(plant => (\r\n                        <tr>\r\n                            <th scope=\"row\">{plant.id}</th>\r\n                                <td>{plant.name}</td>\r\n                                <td>{plant.plantDate}</td>\r\n                                <td>{plant.growTime}</td>\r\n                                <td>{plant.idealWater}</td>\r\n                                <td>{plant.idealSun}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nTable.propTypes = {\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n    newPlant: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.plants.plants,\r\n    newPlant: state.plants.plant\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPlants })(Table);","import React, { Component } from \"react\";\r\nimport Header from '../reusables/Header';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPlants } from '../../actions/plantActions';\r\nimport './chartstyle.css';\r\n\r\nclass Chart extends Component {\r\n\r\n    render() {\r\n\r\n        \r\n        const barChart = \r\n                <Bar\r\n                    type = 'horizontalBar'\r\n                    data = {{\r\n                        labels: this.props.plants.map(plant => plant.name),\r\n                        datasets: [{\r\n                            label: 'Days',\r\n                            backgroundColor: 'lightblue',\r\n                            data: this.props.plants.map(plant => plant.growTime)\r\n                        }]\r\n    \r\n                    }}\r\n                    options={{\r\n                        title:{\r\n                          display:true,\r\n                          text:'Days from planting to harvest',\r\n                          fontSize: 20\r\n                        },\r\n                        scales: {\r\n                            yAxes: [{\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        },\r\n                        responsive: true,\r\n                        legend:{\r\n                          display:true,\r\n                          position:'right'\r\n                        }\r\n                    }}\r\n                />;\r\n\r\n        return(\r\n            <>\r\n            <Header />\r\n            <div>\r\n                <div className=\"chart-container\">\r\n                    {barChart}\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nChart.propTypes = {\r\n    fetchPlants: PropTypes.func.isRequired,\r\n    plants: PropTypes.array.isRequired,\r\n    newPlant: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    plants: state.plants.plants,\r\n    newPlant: state.plants.plant\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPlants })(Chart);","import { FETCH_PLANTS, NEW_PLANT, EDIT_PLANT, DELETE_PLANT } from '../actions/types';\r\nimport initialStateJSON from '../initialState.json';\r\n\r\nconst initialState = {\r\n    plants: initialStateJSON,\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_PLANTS:\r\n            console.log(\"reducer\");\r\n            return {\r\n                ...state\r\n            };\r\n        case NEW_PLANT:    \r\n            return {    \r\n                ...state,    \r\n                plants: state.plants.concat(action.payload)    \r\n            };   \r\n        case EDIT_PLANT:    \r\n            return {    \r\n                ...state,    \r\n                plants: state.plants.map(    \r\n                    (content, i) => content.id === action.payload.id ? {...content, employeeName : action.payload.employeeName ,  employeeDepartment : action.payload.employeeDepartment } : content)    \r\n            };    \r\n        case DELETE_PLANT:    \r\n            return {    \r\n                ...state,    \r\n                plants: state.plants.filter(item => item.id !== action.payload)    \r\n            };  \r\n        default:\r\n            return state; \r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport plantReducer from './plantReducer';\r\n\r\nexport default combineReducers({\r\n    plants: plantReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState,\r\n    compose( \r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landing from './components/Landing/Landing';\nimport Table from './components/Table/Table';\nimport Chart from './components/Chart/Chart';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nfunction App() { \n  return (\n    <Router>\n      <React.Fragment>\n        <Provider store={store}>\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/State-Management\" component={Landing} />\n            <Route exact path=\"/table\" component={Table} />\n            <Route exact path=\"/chart\" component={Chart} />\n          </Switch>\n        </Provider>\n      </React.Fragment>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}